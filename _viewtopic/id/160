<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>forum.bittorrent-archive.mythra.dev / BEP 30: Merkle hash torrent extension</title>
<link rel="stylesheet" type="text/css" href="style/Kontrast.css" />
</head>
<body>

<div id="punwrap">
<div id="punviewtopic" class="pun">

<div id="brdheader" class="block">
	<div class="box">
		<div id="brdtitle" class="inbox">
			<h1><span>forum.bittorrent-archive.mythra.dev</span></h1>
			<p><span>BitTorrent.org community</span></p>
		</div>
		<div id="brdmenu" class="inbox">
			<ul>
				<li id="navindex"><a href="index.php">Index</a></li>
				<li id="navextra1"><a href="http://forum.bittorrent-archive.mythra.dev">Homepage</a></li>
				<li id="navextra2"><a href="irc://irc.freenode.net/bittorrent">IRC</a></li>
				<li id="navuserlist"><a href="userlist.php">User list</a></li>
				<li id="navrules"><a href="misc.php?action=rules">Rules</a></li>
				<li id="navsearch"><a href="search.php">Search</a></li>
				<li id="navregister"><a href="register.php">Register</a></li>
				<li id="navlogin"><a href="login.php">Login</a></li>
			</ul>
		</div>
		<div id="brdwelcome" class="inbox">
			<p>You are not logged in.</p>
		</div>
	</div>
</div>

<div id="announce" class="block">
	<h2><span>Announcement</span></h2>
	<div class="box">
		<div class="inbox">
			<div>Posting about any illegal sharing of copyrighted content is strictly forbidden.</div>
		</div>
	</div>
</div>

<div class="linkst">
	<div class="inbox">
		<p class="pagelink conl">Pages: <a href="viewtopic.php?id=160&amp;p=1">1</a>&nbsp;<strong>2</strong></p>
		<p class="postlink conr">&nbsp;</p>
		<ul><li><a href="index.php">Index</a></li><li>&nbsp;&raquo;&nbsp;<a href="viewforum.php?id=25">BEPs</a></li><li>&nbsp;&raquo;&nbsp;BEP 30: Merkle hash torrent extension</li></ul>
		<div class="clearer"></div>
	</div>
</div>

<div id="p1300" class="blockpost rowodd">
	<h2><span><span class="conr">#26&nbsp;</span><a href="viewtopic.php?pid=1300#p1300">2010-04-08 11:50:38</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89618">The 8472</a></strong></dt>
					<dd class="usertitle"><strong>Azureus Developer</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3> Re: BEP 30: Merkle hash torrent extension</h3>
				<div class="postmsg">
					<blockquote><div class="incqbox"><h4>Olaf van der Spek wrote:</h4><p>The root hash doesn't depend on the piece size.</p></div></blockquote><p>No, but either<br />-the infohash does (if infohash != root hash)<br />-the piece sizes have to be negotiated for each connection<br />-we use some offset-length based approach instead of piece numbers or<br />-piece sizes have to be fixed<br /><br />If we want to achieve a&nbsp; 1:1 relationship between hashes and content.</p>
				</div>
				<div class="postsignature"><hr />Az dev</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div id="p1302" class="blockpost roweven">
	<h2><span><span class="conr">#27&nbsp;</span><a href="viewtopic.php?pid=1302#p1302">2010-04-08 11:59:00</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89609">Olaf van der Spek</a></strong></dt>
					<dd class="usertitle"><strong>Member</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3> Re: BEP 30: Merkle hash torrent extension</h3>
				<div class="postmsg">
					<p>That's all unrelated to using 1 kb leafs (or we don't understand eachother).<br /><br />If you don't put the piece size in the info block, the info_hash won't depend on it.<br /><br />I think we both agree on these goals:<br />The per-file (root) hash should only depend on file data, not on meta data. <br />The swarm 'key' (previously info_hash) should only depend on file data.<br />These hashes should not include unnecessary implementation details.</p>
					<p class="postedit"><em>Last edited by Olaf van der Spek (2010-04-08 12:04:42)</em></p>
				</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div id="p1304" class="blockpost rowodd">
	<h2><span><span class="conr">#28&nbsp;</span><a href="viewtopic.php?pid=1304#p1304">2010-04-08 12:46:23</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89618">The 8472</a></strong></dt>
					<dd class="usertitle"><strong>Azureus Developer</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3> Re: BEP 30: Merkle hash torrent extension</h3>
				<div class="postmsg">
					<blockquote><div class="incqbox"><h4>Olaf van der Spek wrote:</h4><p>I think we both agree on these goals:<br />The per-file (root) hash should only depend on file data, not on meta data. <br />The swarm 'key' (previously info_hash) should only depend on file data.<br />These hashes should not include unnecessary implementation details.</p></div></blockquote><p>Correct. Special care has to be taken in the case of multifile torrents. <br /><br />See <a href="http://forum.bittorrent-archive.mythra.dev/viewtopic.php?pid=1196#p1196" rel="nofollow">http://forum.bittorrent-archive.mythra.dev/viewtopic.p &hellip; 1196#p1196</a> and <br /><a href="http://forum.bittorrent-archive.mythra.dev/viewtopic.php?pid=1224#p1224" rel="nofollow">http://forum.bittorrent-archive.mythra.dev/viewtopic.p &hellip; 1224#p1224</a> for things that have to be considered.<br /><br />To recap:<br />-per file tree (no more piece-spanning files or file-spanning pieces!)<br />-swarm key is based on sorted tree of file tree root hashes<br />-another hash that includes file names and some other metadata. only used for magnets and indexing sites. trackers and dht (mostly) use the swarm key.<br /><br />And interesting side effect is that the swarm key itself is not entirely useable since it only describes nameless files with uncertain length. You still need the metadata-key to get some file names and lengths.<br />Maybe we could do something about the lengths... names aren't as important, as you can simply rename them when worse comes to worse.</p>
				</div>
				<div class="postsignature"><hr />Az dev</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div id="p1306" class="blockpost roweven">
	<h2><span><span class="conr">#29&nbsp;</span><a href="viewtopic.php?pid=1306#p1306">2010-04-08 12:50:22</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89609">Olaf van der Spek</a></strong></dt>
					<dd class="usertitle"><strong>Member</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3> Re: BEP 30: Merkle hash torrent extension</h3>
				<div class="postmsg">
					<p>Is there a need for the swarm key to be usable?</p>
				</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div id="p1308" class="blockpost rowodd">
	<h2><span><span class="conr">#30&nbsp;</span><a href="viewtopic.php?pid=1308#p1308">2010-04-08 14:31:58</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89618">The 8472</a></strong></dt>
					<dd class="usertitle"><strong>Azureus Developer</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3> Re: BEP 30: Merkle hash torrent extension</h3>
				<div class="postmsg">
					<p>I don't know, but if we have 2 identifiers floating around which are necessary for the use of a torrent and one of them is non-unique we should take care what goes where.<br /><br />For example the swarm key would imply file lengths (which you need to know for requests) but does not specify them. The (or one of many) metadata-key would provide that kind of information.<br /><br />I can't see any direct trouble arising from this, but it seems like a pitfall.</p>
				</div>
				<div class="postsignature"><hr />Az dev</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div id="p1316" class="blockpost roweven">
	<h2><span><span class="conr">#31&nbsp;</span><a href="viewtopic.php?pid=1316#p1316">2010-04-13 07:00:41</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89996">gritzko</a></strong></dt>
					<dd class="usertitle"><strong>Member</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3> Re: BEP 30: Merkle hash torrent extension</h3>
				<div class="postmsg">
					<p>Well, I've implemented what you're talking about in the swift protocol. That all causes slightly different tradeoff picture than you have in BT, but some sort of convergence is theoretically possible. Here is a poor spec:<br /><a href="http://github.com/gritzko/swift/blob/master/doc/draft-ietf-ppsp-grishchenko-swift.txt" rel="nofollow">http://github.com/gritzko/swift/blob/ma &hellip; -swift.txt</a><br />Hilights:<br /> * per-KB hash trees are perfectly OK, probably eat 10-15% more CPU using the git's SHA-1 (OpenSSL sucks)<br /> * file size may be derived from the hashes, so the root hash is the only piece of metadata you really need<br /> * that of course makes sense if hash trees are per-file (one transmission = one file), otherwise what is the profit?<br /> * per KB hashes allow UDP implementation: every datagram might be checked separately, no need to reassemble stream; may even make it a transport protocol (over bare IP)<br /> * I believe, that allows for live streaming / VoD / data unification (live needs smaller packets, 1KB is small enough; hash trees might be used for live streams as well, just a matter of CPU, and a PC has enough)<br /> * on-the-wire overhead is 1 hash per 1KB of data (ideally), i.e. 2% optimistically; some redundancy is often necessary, so let's say 3%.<br /> * mmap'd hash arrays are OK so far, but set-top boxes need workarounds (cause crypto happens at co-proc)<br /> * per-KB state is a lot of bits indeed, solved by better datastructures (better than bit vector)</p>
				</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div id="p1324" class="blockpost rowodd">
	<h2><span><span class="conr">#32&nbsp;</span><a href="viewtopic.php?pid=1324#p1324">2010-04-14 06:20:53</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89618">The 8472</a></strong></dt>
					<dd class="usertitle"><strong>Azureus Developer</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3> Re: BEP 30: Merkle hash torrent extension</h3>
				<div class="postmsg">
					<blockquote><div class="incqbox"><h4>gritzko wrote:</h4><p>* file size may be derived from the hashes, so the root hash is the only piece of metadata you really need<br /> * that of course makes sense if hash trees are per-file (one transmission = one file), otherwise what is the profit?</p></div></blockquote><p>We have to operate with multifile torrents though. I.e. the root would be a tree of trees. So at the very least the number of files would have to be included too somehow.</p>
				</div>
				<div class="postsignature"><hr />Az dev</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div id="p1326" class="blockpost roweven">
	<h2><span><span class="conr">#33&nbsp;</span><a href="viewtopic.php?pid=1326#p1326">2010-04-14 06:34:59</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89996">gritzko</a></strong></dt>
					<dd class="usertitle"><strong>Member</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3> Re: BEP 30: Merkle hash torrent extension</h3>
				<div class="postmsg">
					<blockquote><div class="incqbox"><h4>The 8472 wrote:</h4><p>We have to operate with multifile torrents though. I.e. the root would be a tree of trees. So at the very least the number of files would have to be included too somehow.</p></div></blockquote><p>Well, my workaround was to use directory files (lists of hash:filename pairs). Then, may retrieve them recursively. That way, if a file is included into multiple &quot;torrents&quot;, it would stay the same file, have a single swarm, etc.</p>
				</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div id="p1328" class="blockpost rowodd">
	<h2><span><span class="conr">#34&nbsp;</span><a href="viewtopic.php?pid=1328#p1328">2010-04-14 06:44:12</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89618">The 8472</a></strong></dt>
					<dd class="usertitle"><strong>Azureus Developer</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3> Re: BEP 30: Merkle hash torrent extension</h3>
				<div class="postmsg">
					<p>Then you'd be downloading several swarms at once, which generally is bad for performance. Not to mention that you might have thousands of swarms for things like image-collections (10k files in a torrent). This is not acceptable for tracker or DHT load and very very bad for the swarm health.<br /><br />Swarms generally live longer the larger they are. Thus 1 swarm identifier (thus hash) for a set of files is necessary.</p>
				</div>
				<div class="postsignature"><hr />Az dev</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div id="p1330" class="blockpost roweven">
	<h2><span><span class="conr">#35&nbsp;</span><a href="viewtopic.php?pid=1330#p1330">2010-04-15 04:46:12</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89996">gritzko</a></strong></dt>
					<dd class="usertitle"><strong>Member</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3> Re: BEP 30: Merkle hash torrent extension</h3>
				<div class="postmsg">
					<blockquote><div class="incqbox"><h4>The8472 wrote:</h4><p>Swarms generally live longer the larger they are. Thus 1 swarm identifier (thus hash) for a set of files is necessary.</p></div></blockquote><p>Well, one possible hack is to track directory files, don't track small files inside.<br />Another hack is to put more announces into a single datagram to a tracker.<br /><br />But the general point is: BitTorrent is in a local maximum. Once you take some nice architectural decision, like 1KB Merkle hashes, it creates an avalanche effect and in the end you have to say no to backward compatibility; you got a different protocol in a different local maximum.</p>
				</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div id="p1340" class="blockpost rowodd">
	<h2><span><span class="conr">#36&nbsp;</span><a href="viewtopic.php?pid=1340#p1340">2010-04-15 16:53:54</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89618">The 8472</a></strong></dt>
					<dd class="usertitle"><strong>Azureus Developer</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3> Re: BEP 30: Merkle hash torrent extension</h3>
				<div class="postmsg">
					<blockquote><div class="incqbox"><h4>gritzko wrote:</h4><p>Well, one possible hack is to track directory files, don't track small files inside.</p></div></blockquote><p>Of course that's possible. But piece-addressing has to be adjusted in this case.<br /><br /><br />All i'm saying is those things have to be considered, and in my opinion multi-file torrents are a major benefit of bittorrent that should be carried over into any non-backwards compatible design simply due to the performance advantages it yields.</p>
				</div>
				<div class="postsignature"><hr />Az dev</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div class="postlinksb">
	<div class="inbox">
		<p class="postlink conr">&nbsp;</p>
		<p class="pagelink conl">Pages: <a href="viewtopic.php?id=160&amp;p=1">1</a>&nbsp;<strong>2</strong></p>
		<ul><li><a href="index.php">Index</a></li><li>&nbsp;&raquo;&nbsp;<a href="viewforum.php?id=25">BEPs</a></li><li>&nbsp;&raquo;&nbsp;BEP 30: Merkle hash torrent extension</li></ul>
		<div class="clearer"></div>
	</div>
</div>

<div id="brdfooter" class="block">
	<h2><span>Board footer</span></h2>
	<div class="box">
		<div class="inbox">

			<div class="conl">
				<form id="qjump" method="get" action="viewforum.php">
					<div><label>Jump to
					<br /><select name="id" onchange="window.location=('viewforum.php?id='+this.options[this.selectedIndex].value)">
						<optgroup label="BitTorrent">
							<option value="26">Announcements</option>
							<option value="27">General</option>
							<option value="25" selected="selected">BEPs</option>
							<option value="29">BEP process</option>
							<option value="33">Research Tools</option>
							<option value="32">Cooperation between BitTorrent and ISPs</option>
							<option value="30">Attacks against BitTorrent</option>
							<option value="28">Feature Requests, Found Bugs &gt;&gt;&gt;</option>
					</optgroup>
					</select>
					<input type="submit" value=" Go " accesskey="g" />
					</label></div>
				</form>
			</div>
			<p class="conr">Powered by <a href="http://fluxbb.org/">FluxBB</a></p>
			<div class="clearer"></div>
		</div>
	</div>
</div>

</div>
</div>

<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-116155-1";
_udn = "utorrent.com";
urchinTracker();
</script>

</body>
</html>
