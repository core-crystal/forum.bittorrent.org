<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>forum.bittorrent.org / Informational BEP: Best Practices in Client Design</title>
<link rel="stylesheet" type="text/css" href="style/Kontrast.css" />
</head>
<body>

<div id="punwrap">
<div id="punviewtopic" class="pun">

<div id="brdheader" class="block">
	<div class="box">
		<div id="brdtitle" class="inbox">
			<h1><span>forum.bittorrent.org</span></h1>
			<p><span>BitTorrent.org community</span></p>
		</div>
		<div id="brdmenu" class="inbox">
			<ul>
				<li id="navindex"><a href="index.php">Index</a></li>
				<li id="navextra1"><a href="http://forum.bittorrent.org">Homepage</a></li>
				<li id="navextra2"><a href="irc://irc.freenode.net/bittorrent">IRC</a></li>
				<li id="navuserlist"><a href="userlist.php">User list</a></li>
				<li id="navrules"><a href="misc.php?action=rules">Rules</a></li>
				<li id="navsearch"><a href="search.php">Search</a></li>
				<li id="navregister"><a href="register.php">Register</a></li>
				<li id="navlogin"><a href="login.php">Login</a></li>
			</ul>
		</div>
		<div id="brdwelcome" class="inbox">
			<p>You are not logged in.</p>
		</div>
	</div>
</div>

<div id="announce" class="block">
	<h2><span>Announcement</span></h2>
	<div class="box">
		<div class="inbox">
			<div>Posting about any illegal sharing of copyrighted content is strictly forbidden.</div>
		</div>
	</div>
</div>

<div class="linkst">
	<div class="inbox">
		<p class="pagelink conl">Pages: <strong>1</strong></p>
		<p class="postlink conr">&nbsp;</p>
		<ul><li><a href="index.php">Index</a></li><li>&nbsp;&raquo;&nbsp;<a href="viewforum.php?id=25">BEPs</a></li><li>&nbsp;&raquo;&nbsp;Informational BEP: Best Practices in Client Design</li></ul>
		<div class="clearer"></div>
	</div>
</div>

<div id="p186" class="blockpost rowodd firstpost">
	<h2><span><span class="conr">#1&nbsp;</span><a href="viewtopic.php?pid=186#p186">2008-05-01 13:22:18</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89601">dave</a></strong></dt>
					<dd class="usertitle"><strong>Editor</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3>Informational BEP: Best Practices in Client Design</h3>
				<div class="postmsg">
					<p>Eric Klinker (CTO of BitTorrent, Inc.) has proposed the community provide an Informational BEP that describes lessons learned in the process of building clients. <br /><br />So far Aaron Grunthal (Azureus), Arvid Norberg (libtorrent, uTorrent), Greg Hazel (python mainline, uTorrent), and David Harrison (python mainline, uTorrent) have volunteered to co-author.<br /><br />I invite participation from anyone who has <em> developed </em> and <em> publicly distributed </em> a BitTorrent client.&nbsp; &nbsp;If you wish to contribute then either email editor@bittorrent.org or post in this topic.<br /><br />What should this proposed BEP cover?<br /><br />--David Harrison</p>
				</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div id="p187" class="blockpost roweven">
	<h2><span><span class="conr">#2&nbsp;</span><a href="viewtopic.php?pid=187#p187">2008-05-01 14:36:24</a></span></h2>
	<div class="box">
		<div class="inbox">
			<div class="postleft">
				<dl>
					<dt><strong><a href="profile.php?id=89618">The 8472</a></strong></dt>
					<dd class="usertitle"><strong>Azureus Developer</strong></dd>
					<dd class="postavatar"></dd>
				</dl>
			</div>
			<div class="postright">
				<h3> Re: Informational BEP: Best Practices in Client Design</h3>
				<div class="postmsg">
					<p>Ok, i'll make the start here with explaining request limiting, as it seems that almost nobody got what i meant when i described our current approach with Az, it's actually quite simple:<br /><br />You set a download rate limit <em>L</em> (let's say <em>L</em> = 100KiB/s) and calculate a bucket size <em>B</em> based on the max. RTT and TBF-responsiveness you want to deal with, let's say <em>T</em> =&nbsp; 1 second. Thus <em>B</em> = <em>T</em> * <em>L</em> = 100KiB.<br /><br />As the implementing client is probably using read-limiting at the moment, the read limit should be increased to something like max(<em>L</em>*1.1,<em>L</em>+10KiB/s). That is if a hard limit is desired as request limiting is only an approximate measure and bursts can significantly exceed the set limits for time intervals that are similar to or smaller than <em>T</em>.<br /><br />Assuming that piece picking is done globally the Bucket gets refilled rate <em>L</em> before piece picking for all peers is performed (based on the passed time since the last refill). Then all peers that currently unchoke us are sorted into a queue, based on various comparison metrics, the most important one is their current speed (i.e. how fast we're downloading from them).<br />Then we start piece-picking and allocate requests to the peers until our request queue for that peer is full, where the request queue is usually scaled based on the current speed, i.e. we won't allow more than 2 outstanding blocks from a slow peer but would request... let's say 15 blocks from a fast peer. Once the queue of the best peer is full we allocate requests to the next peer and then the next and so on until the bucket is empty.<br /><br />If the peers provide an aggregate bandwidth that exceeds the set bandwidth cap <em>L</em> then we will greedily allocate requests to as few peers as possible to satisfy the set cap, thus reducing the number of used upload slots of the peersand simultaneously reduce the number of active TCP connections on our side. It also keeps the receive-buffers empty as we're not read-limiting. <br /><br />The peers-to-pick-from-queue sort order has some wiggle room since sorting by the current download speed will only sort the currently active peers but leave the inactive (but unchoking) set unsorted. Since this sort order determines who we'll pick next from in case the currently active set does not satisfy the cap L then additional sort rules can be added to<br /><br /><ul style="list-style-type: disc"><li>request from peers we're currently uploading to (to stabilize tit-for-tat)</li><li>local peers</li><li>peers we haven't downloaded from yet (thus probing connected faster)</li></ul><br /><br />If the aggregate available bandwidth from the peers does not satisfy the limit L then request limiting doesn't kick in - as the buffers won't run dry - and we can just use the normal request-pipelining behavior, as router buffers won't fill up anyway etc.</p>
					<p class="postedit"><em>Last edited by The 8472 (2008-05-03 04:05:46)</em></p>
				</div>
				<div class="postsignature"><hr />Az dev</div>
			</div>
			<div class="clearer"></div>
			<div class="postfootleft"><p>Offline</p></div>
			<div class="postfootright"><div>&nbsp;</div></div>
		</div>
	</div>
</div>

<div class="postlinksb">
	<div class="inbox">
		<p class="postlink conr">&nbsp;</p>
		<p class="pagelink conl">Pages: <strong>1</strong></p>
		<ul><li><a href="index.php">Index</a></li><li>&nbsp;&raquo;&nbsp;<a href="viewforum.php?id=25">BEPs</a></li><li>&nbsp;&raquo;&nbsp;Informational BEP: Best Practices in Client Design</li></ul>
		<div class="clearer"></div>
	</div>
</div>

<div id="brdfooter" class="block">
	<h2><span>Board footer</span></h2>
	<div class="box">
		<div class="inbox">

			<div class="conl">
				<form id="qjump" method="get" action="viewforum.php">
					<div><label>Jump to
					<br /><select name="id" onchange="window.location=('viewforum.php?id='+this.options[this.selectedIndex].value)">
						<optgroup label="BitTorrent">
							<option value="26">Announcements</option>
							<option value="25" selected="selected">BEPs</option>
							<option value="29">BEP process</option>
							<option value="27">General</option>
							<option value="33">Research Tools</option>
							<option value="32">Cooperation between BitTorrent and ISPs</option>
							<option value="30">Attacks against BitTorrent</option>
							<option value="28">Feature Requests, Found Bugs &gt;&gt;&gt;</option>
					</optgroup>
					</select>
					<input type="submit" value=" Go " accesskey="g" />
					</label></div>
				</form>
			</div>
			<p class="conr">Powered by <a href="http://fluxbb.org/">FluxBB</a></p>
			<div class="clearer"></div>
		</div>
	</div>
</div>

</div>
</div>

<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-116155-1";
_udn = "utorrent.com";
urchinTracker();
</script>

</body>
</html>
